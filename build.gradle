buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.fdu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    maven{
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'javax.xml.bind:jaxb-api:2.2.11'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-freemarker', version: '2.1.3.RELEASE'
    compile 'mysql:mysql-connector-java'

    compile 'org.apache.poi:poi:3.17'
    compile 'org.apache.poi:poi-ooxml:3.17'
    compile 'org.apache.poi:ooxml-schemas:1.3'

    compile 'com.google.guava:guava:25.1-jre'
    compile 'com.hankcs:hanlp:portable-1.3.4'

    // CoreNLP
    compile 'edu.stanford.nlp:stanford-corenlp:3.9.2'
    compile 'edu.stanford.nlp:stanford-corenlp:3.9.2:models'
    compile 'edu.stanford.nlp:stanford-corenlp:3.9.2:models-chinese'

    // Log4j
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'

    // JSON
    compile 'org.json:json:20180813'

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

// Angular Setup
def webappDir = "$projectDir/src/main/webapp"
sourceSets {
    main {
        resources {
            srcDirs = ["$webappDir/dist", "$projectDir/src/main/resources"]
        }
    }
}

//processResources {
//    dependsOn "buildAngular"
//}

task buildAngular() {
//    dependsOn "installAngular"
    doLast{
        exec {
            ignoreExitValue true
            workingDir "$webappDir"
            commandLine "npm", "install"
        }
        exec {
            workingDir "$webappDir"
            commandLine "ng", "build"
        }
//        exec {
//            workingDir "$webappDir"
//            commandLine "ng", "serve"
//        }
    }

//    ignoreExitValue true

}

task installAngular() {
    doLast{
        exec {
//            ignoreExitValue true
            workingDir "$webappDir"
            commandLine "zsh", "c", "npm", "install"
        }
    }
}
